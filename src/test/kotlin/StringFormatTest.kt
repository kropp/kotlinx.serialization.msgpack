import kotlinx.serialization.Serializable
import org.junit.*
import org.junit.Assert.*

class StringFormatTest {
  @Serializable
  data class D(val a: String)

  @Test
  fun shortString() {
    val bytes = byteArray(0x81, 0xa1, 0x61, 0xa1, 0x61)

    assertThat(MessagePack.pack(D("a")), IsByteArrayEqual(bytes))

    assertEquals(D("a"), MessagePack.parse<D>(bytes))
    assertEquals(D("a"), MessagePack.parse<D>(byteArray(0x81, 0xa1, 0x61, 0xd9, 0x01, 0x61)))
    assertEquals(D("a"), MessagePack.parse<D>(byteArray(0x81, 0xa1, 0x61, 0xda, 0x00, 0x01, 0x61)))
    assertEquals(D("a"), MessagePack.parse<D>(byteArray(0x81, 0xa1, 0x61, 0xdb, 0x00, 0x00, 0x00, 0x01, 0x61)))
  }

  @Test
  fun longString() {
    val bytes = byteArray(0x81, 0xa1, 0x61, 0xd9, 0x20, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x32)

    val str = "12345678901234567890123456789012"
    assertThat(MessagePack.pack(D(str)), IsByteArrayEqual(bytes))

    assertEquals(D(str), MessagePack.parse<D>(bytes))
    assertEquals(D(str), MessagePack.parse<D>(byteArray(0x81, 0xa1, 0x61, 0xda, 0x00, 0x20, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x32)))
  }

  @Test
  fun utf8() {
    val cyrillic = "Кириллица"
    val cyrillicBytes = byteArray(0x81, 0xa1, 0x61, 0xb2, 0xd0, 0x9a, 0xd0, 0xb8, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbb, 0xd0, 0xbb, 0xd0, 0xb8, 0xd1, 0x86, 0xd0, 0xb0)
    val hiragana = "ひらがな"
    val hiraganaBytes = byteArray(0x81, 0xa1, 0x61, 0xac, 0xe3, 0x81, 0xb2, 0xe3, 0x82, 0x89, 0xe3, 0x81, 0x8c, 0xe3, 0x81, 0xaa)

    assertThat(MessagePack.pack(D(cyrillic)), IsByteArrayEqual(cyrillicBytes))
    assertThat(MessagePack.pack(D(hiragana)), IsByteArrayEqual(hiraganaBytes))

    assertEquals(D(cyrillic), MessagePack.parse<D>(cyrillicBytes))
    assertEquals(D(hiragana), MessagePack.parse<D>(hiraganaBytes))
  }

  @Test
  fun emoji() {
    val bytes = byteArray(0x81, 0xa1, 0x61, 0xa4, 0xf0, 0x9f, 0x8d, 0xba)

    assertThat(MessagePack.pack(D("\uD83C\uDF7A")), IsByteArrayEqual(bytes))

    assertEquals(D("\uD83C\uDF7A"), MessagePack.parse<D>(bytes))
  }
}